local m = { }

function m:new(conf)
    print('=======',conf.v)
    self.http = require('oshine/om@' .. conf.v .. ':api/promise'):new(conf)
    return self
end

function m:add(package_name, git_source)
    local illegal_filter = { 'api', 'check', 'login', 'hook', 'logout',
                             'status', 'send', 'install[-i/i]', 'program[prg]',
                             'favorite[fav]', 'article[art]',
                             'package[pkg]', 'search[ser]' };
    if in_array(package_name, illegal_filter) then
        out('package_name can be any of ' .. join(',', illegal_filter))
        return
    end

    print('Add new package to server too be install for other people:', package_name, git_source)
    if not is_valid(package_name, git_source) then
        print('package_name or git_source is empty')
        return
    end

    local form_ = { package_name = package_name, git_source = git_source }

    self.http:request('/api/cw_package/add', { form = form_ })._then(function(r)
        if -1 ~= tonumber(r.code) and r.data then
            print(package_name .. ' add success ,with git_source:' .. git_source)
        else
            print(r.msg)
        end
    end)
end

function m:_install(data)
    local install_where = env('CWM_PATH')
    print(json_encode(data))
    if not data[1] then
        return
    end
    local git_source = data[1].git_source
    local arr = str_index(git_source, ',')
    if arr > -1 then
        git_source = str_split(git_source, ',')
    else
        git_source = { git_source }
    end
    for _, v in pairs(git_source) do
        local download_path = install_where .. '/' .. data.name .. '.zip'
        local dr = download(v, download_path, function(r)
            print(r .. '%')
        end)
        if dr then
            un_compress(download_path)
        end
    end
end

function m:search(key, callback)
    if is_install then
        if _str_index(key, '/') < 1 then
            print('install a package ,must full path like:oshine/device')
            return
        end
    end

    self.http:request('/api/package/search', { form = { package_name = key, os = _os() } })._then(function(r)
        if -1 ~= tonumber(r.code) and r.data then
            if #r.data > 0 then
                -- install [安装]
                if callback then
                    callback(r.data)
                    return
                end

                for _, v in pairs(r.data) do
                    print(v.name, v.title, v.port, v.git_source, v.install_times, v.platform, v.remark)
                end
            end
        else
            print(r.msg)
        end
    end)
end

return m

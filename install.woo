-- 安装自己

-- https://gitee.com/oshine/om/raw/master/installer.woo
-- https://gitee.com/oshine/om/raw/v1.0.11/installer.woo

local T = true

--local host = 'https://woo.wooyri.com/om?ver='
local host = 'http://127.0.0.1:8008/s/om?ver='

local params = _args()

if not params.lan then
    while true do
        --params.lan = _readline('please choose install language(default [en] english)/请选择安装语言(默认[en]英文):[en/zh]')
        if not params.lan then
            params.lan = 'en'
        end
        if not _in_array(params.lan, { 'en', 'zh' }) then
            print('only en or zh valid,trt again/只能输入en或者zh，请重试')
        else
            print(({ ['en'] = 'you choose english', ['zh'] = '你选择了中文' })[params.lan])
            break
        end
    end
end

print(({ ['en'] = 'ready to request server for om version', ['zh'] = '准备请求服务器可用的om版本' })[params.lan])

local ver = _str_sub(_ver(), 0, 4)
host = host .. ver
local available, err = woo.http:new():get(host)

if err ~= nil then
    print(err)
    return
end

available = available.body

if _is_valid(available) then
    available = _json_decode(available)
else
    print('can not access network')
    os.exit(-1)
end
if available.code ~= 0 then
    print('unknown error')
    return
end

--_out(available)

print(({ ['en'] = 'there have the version[%s] valid',
         ['zh'] = '这里有版本[%s]可用' })[params.lan]:format(available.data.ver))

if not params.install_dir then
    --params.install_dir = _readline(({ ['en'] = 'type install dir,default ${home}/om:',
    --                                  ['zh'] = '请输入安装目录，默认 ${home}/om:' })[params.lan])
    if not params.install_dir then
        params.install_dir = _home() .. '/om'
    end
end

-- 动态获取当前woo语言版本对应的最大可用om版本
local om = '1.15'

function downl()

    local addr = available.data.addr

    if not addr then
        print(({ ['en'] = 'server response err', ['zh'] = '服务器返回不正确' })[params.lan])
        return
    end

    local curr_env = _env('OM_PATH')
    print(({ ['en'] = 'current OM_PATH：%s,you choose install dir:%s',
             ['zh'] = '当前 OM_PATH：%s,你选择的安装地址：%s' })[params.lan]:format(curr_env, params.install_dir))

    if curr_env ~= params.install_dir then

        if _os() == 'windows' then
            -- 添加环境变量，判断windows和unix系统
            _exec({ 'cmd', '/c', 'setx OM_PATH ' .. params.install_dir })
        else
            _exec({ 'sh', '-c', 'echo export OM_PATH=' .. params.install_dir .. ' >> ~/.bashrc && source ~/.bashrc' })
        end
        print(({ ['en'] = 'env variable not correct ,correct it now', ['zh'] = '环境变量不正确，已经修正' })[params.lan])
    else

        print(({ ['en'] = 'env variable ok ,skip it', ['zh'] = '环境变量配置正确，跳过' })[params.lan])
    end

    local addrs = _str_split(addr, '|')
    for i, addr_host in pairs(addrs) do

        if _str_index(addr, 'gitee.com/') ~= -1 then
            -- https://gitee.com/oshine/om/repository/archive/v1.0.11.zip
            -- https://gitee.com/oshine/om/repository/archive/v1.0.11.zip?ref=v1.0.11&sha=fbaebe69d0e33c243f5c40a63cf8af26cb044b45&format=zip&captcha_type=yunpian&token=938e763645e446f78190ae5047f357b1&authenticate=784120e1cf514f91ac01d8251a81c696
            addr_host = addr_host .. '/repository/archive/v' .. available.data.ver .. '.zip'
        elseif _str_index(addr, 'github.com/') ~= -1 then
            -- todo，install from github

        end

        print(({ ['en'] = 'start download from:%s',
                 ['zh'] = '开始下载：%s' })[params.lan]:format(addr_host))
        _wget('om.zip', addr_host,
                { cookies = {  }, headers = { ['User-Agent'] = 'curl/7.74.0 (' .. _os(true) .. '/woo-' .. _ver() .. ')' } },
                function(current, total)
                    print(current, total)
                end)
        break
    end

    print(({ ['en'] = 'finish download,start unzip...',
             ['zh'] = '下载完成开始解压...' })[params.lan])
    local exit = _file_exist(params.install_dir .. '/om')
    print('exit:', exit, params.install_dir .. '/om')
    if exit then
        local r = (({ ['en'] = 'om already install,are you sure replace it?(y/n):',
                      ['zh'] = 'om 已经安装，是否替换？' })[params.lan])

        if _readline(r) ~= 'y' then
            return
        end
        print(({ ['en'] = 'delete old om folder...',
                 ['zh'] = '删除就的om文件夹...' })[params.lan])
        _rm(params.install_dir .. '/om')
    end

    local unzip_res = _zip('unzip', 'om.zip', params.install_dir .. '/')
    if unzip_res ~= true then
        print(({ ['en'] = 'unzip fail:%s',
                 ['zh'] = '解压失败:%s' })[params.lan]:format(unzip_res))
        return
    end
end

--downl()

print(({ en = 'unzip success，install om dependencies package',
         zh = '解压成功，安装om依赖包' })[params.lan])

--local git='https://gitee.com/oshine/om'


package.path = '@' .. params.install_dir .. '/?.woo'
print(package.path)

require('oshine/om@1.?:installer'):new(params.install_dir .. '/oshine/om/' .. om):install({ lan = params.lan }, true)

print(({ ['en'] = 'success', ['zh'] = '成功' })[params.lan])
